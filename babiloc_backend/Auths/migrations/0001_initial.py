# Generated by Django 5.2.1 on 2025-07-25 11:44

import Auths.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('number', models.TextField(null=True)),
                ('birthdate', models.DateField(null=True)),
                ('carte_identite', models.FileField(blank=True, null=True, upload_to=Auths.models.upload_path_cni)),
                ('permis_conduire', models.FileField(blank=True, null=True, upload_to=Auths.models.upload_path_permis)),
                ('est_verifie', models.BooleanField(default=False)),
                ('is_vendor', models.BooleanField(default=False)),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='photos_profil/')),
                ('image_banniere', models.ImageField(blank=True, null=True, upload_to='bannieres/')),
                ('otp_code', models.CharField(blank=True, max_length=4, null=True)),
                ('otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('otp_verified', models.BooleanField(default=False)),
                ('recompense_parrainage', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Récompense de parrainage')),
                ('nb_parrainages', models.IntegerField(default=0, verbose_name='Nombre de parrainages')),
                ('code_parrainage', models.CharField(blank=True, help_text="Code unique pour parrainer d'autres utilisateurs", max_length=10, null=True, unique=True)),
                ('date_parrainage', models.DateTimeField(blank=True, help_text='Date à laquelle cet utilisateur a été parrainé', null=True)),
                ('parrainage_actif', models.BooleanField(default=True, help_text='Indique si le parrainage est encore actif')),
                ('points_parrainage', models.PositiveIntegerField(default=0, help_text='Points accumulés grâce au parrainage')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parrain', models.ForeignKey(blank=True, help_text='Utilisateur qui a parrainé ce compte', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='filleuls', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoriqueParrainage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_action', models.CharField(choices=[('parrainage', 'Parrainage'), ('recompense', 'Récompense'), ('bonus', 'Bonus'), ('utilisation_code', 'Utilisation de code promo')], max_length=20, verbose_name="Type d'action")),
                ('montant_recompense', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant récompense')),
                ('points_recompense', models.IntegerField(default=0, verbose_name='Points récompense')),
                ('description', models.TextField(verbose_name='Description')),
                ('statut_recompense', models.CharField(choices=[('en_attente', 'En attente'), ('versee', 'Versée'), ('annulee', 'Annulée')], default='en_attente', max_length=20, verbose_name='Statut récompense')),
                ('date_action', models.DateTimeField(auto_now_add=True, verbose_name='Date action')),
                ('date_recompense', models.DateTimeField(blank=True, null=True, verbose_name='Date récompense')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('filleul', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='historique_filleul', to=settings.AUTH_USER_MODEL, verbose_name='Filleul')),
                ('parrain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historiques_parrainage', to=settings.AUTH_USER_MODEL, verbose_name='Parrain')),
            ],
            options={
                'verbose_name': 'Historique de parrainage',
                'verbose_name_plural': 'Historiques de parrainage',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CodePromoParrainage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Code promo')),
                ('pourcentage_reduction', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='Pourcentage de réduction')),
                ('reduction_percent', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='Réduction (%)')),
                ('montant_reduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant réduction fixe')),
                ('montant_min', models.DecimalField(decimal_places=2, default=50000.0, max_digits=10, verbose_name='Montant minimum')),
                ('nombre_utilisations_max', models.IntegerField(default=1, verbose_name="Nombre d'utilisations max")),
                ('nombre_utilisations', models.IntegerField(default=0, verbose_name="Nombre d'utilisations")),
                ('date_expiration', models.DateTimeField(verbose_name="Date d'expiration")),
                ('utilise', models.BooleanField(default=False, verbose_name='Utilisé')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('date_utilisation', models.DateTimeField(blank=True, null=True, verbose_name="Date d'utilisation")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date création')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('parrain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes_promo_parrainage', to=settings.AUTH_USER_MODEL, verbose_name='Parrain')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='codes_promo_crees', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur créateur')),
                ('utilise_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='codes_promo_utilises', to=settings.AUTH_USER_MODEL, verbose_name='Utilisé par')),
            ],
            options={
                'verbose_name': 'Code promo parrainage',
                'verbose_name_plural': 'Codes promo parrainage',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom du document')),
                ('type_document', models.CharField(choices=[('carte_identite', "Carte d'identité"), ('permis_conduire', 'Permis de conduire'), ('passeport', 'Passeport'), ('attestation_travail', 'Attestation de travail'), ('justificatif_domicile', 'Justificatif de domicile'), ('autre', 'Autre document')], max_length=50, verbose_name='Type de document')),
                ('fichier', models.FileField(blank=True, null=True, upload_to='documents_utilisateurs/fichiers/', verbose_name='Fichier document')),
                ('image', models.ImageField(blank=True, null=True, upload_to='documents_utilisateurs/images/', verbose_name='Image du document')),
                ('statut_verification', models.CharField(choices=[('en_attente', 'En attente de vérification'), ('approuve', 'Approuvé'), ('refuse', 'Refusé'), ('expire', 'Expiré')], default='en_attente', max_length=20, verbose_name='Statut de vérification')),
                ('date_expiration', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('commentaire_moderateur', models.TextField(blank=True, null=True, verbose_name='Commentaire du modérateur')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('date_verification', models.DateTimeField(blank=True, null=True)),
                ('moderateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents_moderes', to=settings.AUTH_USER_MODEL)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_verification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document utilisateur',
                'verbose_name_plural': 'Documents utilisateur',
                'unique_together': {('utilisateur', 'type_document')},
            },
        ),
    ]
